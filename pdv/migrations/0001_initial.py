# Generated by Django 5.0.4 on 2024-05-17 14:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('cnpj', models.CharField(max_length=100)),
                ('endereco', models.CharField(max_length=100)),
                ('numero', models.CharField(max_length=100)),
                ('bairro', models.CharField(max_length=100)),
                ('cidade', models.CharField(max_length=100)),
                ('estado', models.CharField(max_length=100)),
                ('celular', models.CharField(max_length=100)),
                ('telefone', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('cep', models.CharField(max_length=100)),
                ('logo', models.FileField(blank=True, null=True, upload_to='logos/')),
            ],
        ),
        migrations.CreateModel(
            name='DescontosTroca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valor_desconto', models.FloatField()),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('codigo_desconto', models.IntegerField()),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pdv.empresa')),
            ],
            options={
                'verbose_name': 'Código de Troca',
                'verbose_name_plural': 'Códigos de Troca',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('estoque', models.BooleanField(default=False)),
                ('proprietario', models.BooleanField(default=False)),
                ('vendedor', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('empresa', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='pdv.empresa')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Produto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField()),
                ('nome', models.CharField(max_length=100)),
                ('cor', models.CharField(blank=True, max_length=100, null=True)),
                ('categoria', models.CharField(choices=[('Calçado', 'Calçado'), ('Vestuário', 'Vestuário')], default='Camiseta', max_length=100)),
                ('subcategoria', models.CharField(blank=True, choices=[('Calçado', 'Calçado'), ('Conjunto', 'Conjunto'), ('Camiseta', 'Camiseta'), ('Calça', 'Calça'), ('Short', 'Short'), ('Blusa', 'Blusa'), ('Vestido', 'Vestido'), ('Saia', 'Saia'), ('Bermuda', 'Bermuda'), ('Blazer', 'Blazer'), ('Jaqueta', 'Jaqueta'), ('Colete', 'Colete'), ('Camisa', 'Camisa'), ('Regata', 'Regata'), ('Macacão', 'Macacão'), ('Body', 'Body'), ('Top', 'Top'), ('Cropped', 'Cropped'), ('Sobretudo', 'Sobretudo'), ('Suéter', 'Suéter'), ('Cardigan', 'Cardigan'), ('Poncho', 'Poncho'), ('Kimono', 'Kimono'), ('Jardineira', 'Jardineira'), ('Casaquinho', 'Casaquinho'), ('Túnica', 'Túnica')], default='', max_length=100, null=True)),
                ('preco', models.FloatField()),
                ('tamanho', models.CharField(choices=[('PP', 'PP'), ('P', 'P'), ('M', 'M'), ('G', 'G'), ('GG', 'GG'), ('U', 'U'), ('36', '36'), ('37', '37'), ('38', '38'), ('39', '39'), ('40', '40'), ('41', '41'), ('42', '42'), ('43', '43'), ('44', '44'), ('45', '45'), ('46', '46'), ('47', '47'), ('48', '48'), ('49', '49'), ('50', '50'), ('51', '51'), ('52', '52'), ('53', '53'), ('54', '54'), ('55', '55'), ('56', '56'), ('57', '57'), ('58', '58'), ('59', '59'), ('60', '60'), ('61', '61'), ('62', '62'), ('63', '63'), ('64', '64'), ('65', '65'), ('66', '66'), ('67', '67'), ('68', '68'), ('69', '69'), ('70', '70')], default='U', max_length=100)),
                ('estoque', models.IntegerField()),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pdv.empresa')),
            ],
        ),
        migrations.CreateModel(
            name='ProdutoVendido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_venda', models.IntegerField()),
                ('valor_unitario', models.FloatField()),
                ('quantidade', models.IntegerField()),
                ('valor_total', models.FloatField()),
                ('status', models.CharField(choices=[('Finalizada', 'Finalizada'), ('Troca Realizada', 'Troca Realizada')], default='Finalizada', max_length=100)),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pdv.empresa')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pdv.produto')),
            ],
            options={
                'verbose_name_plural': 'Produtos Vendidos',
            },
        ),
        migrations.CreateModel(
            name='Venda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField()),
                ('valor_total', models.FloatField()),
                ('valor_pix', models.FloatField(blank=True, default=0.0, null=True)),
                ('valor_cartao', models.FloatField(blank=True, default=0.0, null=True)),
                ('valor_dinheiro', models.FloatField(blank=True, default=0.0, null=True)),
                ('valor_desconto', models.FloatField(blank=True, default=0.0, null=True)),
                ('vendedor', models.CharField(max_length=100)),
                ('troco', models.FloatField(blank=True, default=0.0, null=True)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('hora', models.DateTimeField(auto_now_add=True)),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pdv.empresa')),
            ],
        ),
    ]
